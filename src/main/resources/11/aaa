面试官你好，很开心能有这次面试机会。我叫欧阳，湖南娄底人，请问您怎么称呼。xx您好，我这边本科毕业于湖南科技学院，大学学的专业是信息与计算科学，现在有6年多的工作经验。有扎实的java基础，熟悉mysql、redis另外orcle、pgsql、ES数据库也都用过，理解事务机制。有过sql优化经验。有了解过冒泡/快排/选择排序/广度优先搜索算法。

对于当前主流的技术框架都有过了解与实践，比如说spring，springboot，springcloud、mybatis，消息中间件等。对于jvm内存结构和juc并发编程也有过研究。

我最近一家公司做的项目是：

华为智能汽车crm管理系统：该项目主要是对企业销售人员提供客户管理的服务。我在该项目中开发工作主要是：客户管理/客户活动/客户计划/客户洞察模块开发：

客户管理：创建-更新-存在资质校验：法人税务等。敏感词校验。关键信息AES加密处理等。然后进行人工审批，通过审批更新完成发消息通知下游。

活动计划模块主要是：对于客户活动的创建跟通知。客户可以创建线上或者线下活动，关联计划，客户声音。添加参与人，活动详情等信息 创建或者更新活动都会先同步一份数据到es（支持列表的复杂快速查询和客户数据分析）  可以通过邮件跟wink消息通知相关人员。活动相关评论与点赞redis。

客户洞察模块主要是：客户声音，新闻，公告；



另外担任客户&客户关系小组的项目PL 其中管理工作主要负责项目迭代计划管理、每日早会、项目代码检视、项目上线checkList、上线后的总结回顾。

这个项目主要用到的技术是：灵雀平台 + Springboot、mybatis、pgsql、redis做数据缓存、客户相关的活动计划更新保存时会同步一份数据到ES做=支持列表的复杂查询和客户数据分析、rabbitMq发消息通知下游客户状态的改变。

评论点赞功能涉及表：



之前一家公司：云策平台跟魔卡实验室：云策平台是一个公司的对用户申请信用卡做可视化规则生成的平台。用户管理/权限管理/决策流/私有库规则流相关功能。

用户登录以及权限功能实现：

用户登录采用双token机制：一个访问token设置15分钟一个刷新token设置3天。每次请求的时候携带访问token，访问token过期则返回401，前端再使用刷新token访问刷新token接口。

每个接口绑定一个接口编码，对应一个权限点。权限点再关联功能点，功能点再关联角色，最后角色再关联用户。

统一拦截器判断用户是否存在api权限点。

变量-规则-规则流-决策流

规则更新是通过canal检测数据库变化刷新到缓存。512MB



（canal检测更新）

魔卡实验室是公司的可视化绩效管理平台。可视化数据模块开发，相关预警模块开发。

Canal 是阿里巴巴开源的一个数据库增量日志解析中间件，主要用于实时捕获 MySQL 数据库的变更数据（如INSERT、UPDATE、DELETE操作），并将这些变更数据以消息的形式发送到消息队列（如Kafka、RabbitMQ）或其他系统中。

Spring Boot+ MyBatis+ Orcale+mysql+ kafka+Redis + RabbitMQ





在项目中有解决过慢sql问题，有做过部分·代码重构



当时是客户新闻的需求的迭代二出现的。迭代二开发直接把同一个接口给到了另外一个场景使用 ，没有做需求分析。后面我们做版本回顾主要有三个原因：第一BA在需求交接的时候没有告知开发生产环境数据量的大小。第二 开发自己没有考虑性能问题，需求分析没有做到位。第三：测试场景不到位。

解决办法：

拆分业务，将列表查询跟卡片查询区分开。

优化业务逻辑，将分页查询需要的数据量总数跟数据并行查询。

优化sql：去掉不需要的查询字段，修改子查询为join，连表查询时候小表驱动大表，添加覆盖索引。



登录相关代码重构:

	通过抽象工厂+策略设计模式重构有多个情景的代码：根据不同情况登录。

创建一个接口，把不同类型的登录情况分成不同的方法实现。





另外在项目中有根据CSA思想以及redis分布式锁 设计实现过分布式客户NUMBER。

先查询number是否存在，不存在则利用redis上锁并且设置过期时间，上锁成功则查询当前数据库number的最大值。并且在修改前再次确认锁存在。

如果上锁失败则 自旋等待500ms再次获取 且设置自旋次数。

最后成功则释放锁，失败则抛出自定义异常。

