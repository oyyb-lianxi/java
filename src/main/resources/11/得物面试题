1、kafka的基础架构，kafka消费者数量可以大于分区数么？大于怎么办？
2、说一下B+数的结构，空值会走索引么？
3、口述b+数的层级遍历
4、jvm内存模型？栈的生命周期？栈的大小是多少？
程序计数器、虚拟机栈、本地方法栈、堆、方法区（元空间）、运行常量池；
每个线程都有一个私有的虚拟机栈，它会随着方法的调用和返回创建跟销毁。所以它的生命周期跟线程是一样的。
线程生命周期：（新建、就绪（start（）开启新线程并且调用run（））、运行中（run（））、阻塞、等待（object.wait（）、Thread.join（）等待。object.notifyAll（）、object.notify（）会唤醒重新就绪）、超时等待（之后会自动恢复到就绪状态）、结束）
栈的大小是可以通过jvm参数-Xss配置的，默认256kb-1MB之间

5、volatile作用？
volatile是java中的一个关键字,用于修饰变量。确保变量的可见性和禁止指令重排序。主要用于多线程环境中的变量共享，确保线程之间的内存可见性。但是不能保证原子性。
使用场景:单例模式的双重检查机制确保单例实例的可见性

6、synchronized底层实现？让你实现一个锁你怎么做？
synchronized关键字解决的是多个线程之间访问资源的同步性，保证同一时刻被修饰的代码块或者方法只有一个线程执行。
原子性，可见性，有序性，重入性（锁对象的时候有一个计数器）
它的底层是依赖jvm虚拟机实现，java虚拟机给每个对象都设置了一个监听器monitor用于检测并发代码的重入。当方法调用时候会检查有没有acc_synchronized标记 如果有则先持有monitor 当jvm执行到monitorenter指令时候会把锁的计数器+1，当执行monitorexit指令时会计数器-1
synchronized锁升级：无锁
---偏向锁（对象头中存储偏向线程id，如果有另外的线程访问则撤销偏向锁升级为轻量级锁）
---轻量级锁（对象头中存储的是锁记录的指针。当存在锁竞争，会使用自旋锁来避免线程阻塞，等待锁释放，如果等待线程数量比较多或者时间过长则升级为重量级锁）
---重量级锁（对象头中存储的是同步队列的指针被多个线程竞争，线程阻塞，直到锁被释放）

7、redis什么时候会阻塞？需要注意什么？lur底层数据结构
一般情况下redis是非阻塞的，但是redis提供了一些阻塞命令
如果从列表的头部或者尾部弹出元素，或者从有序集合中弹出最大或者最小值的时候列表为空则会阻塞。
redis处理大对象的时候也可能导致阻塞。
执行复杂查询或者涉及大量数据查询的时候也可能导致阻塞。
redis做持久化操作RDB跟AOF的时候虽然是创建一个子进程来操作。但是，生成快照的时候可能占用大量资源会影响主线程的性能。
redis内存不足触发淘汰策略的时候也可能阻塞。
lur数据结构：哈希表+双向连表；其中hash表存储key到链表的映射，用于快速查找缓存项。链表用户维护缓存项的使用顺序。
为啥用hashTable不用concurrentMap是因为table所有方法都是同步的，在多线程环境下更容易理解维护。map需要更多的代码来确保操作的一致性。map虽然性能高 但是在这个场景下没有必要。并且table是java1.0出现的，concurrentMap是1.5才引入。

8、Mysql三个日志是什么：
undoLog：记录操作前的数据快照。用于事务回滚
readLog：事务提交之前记录数据页的修改（事务id，操作类型，表名，行id，修改前后的值）属于存储引擎层
binLog：事务提交之后记录sql语句或者行级别的修改。属于server层
Error Log：错误日志
你查询一条记录，会从硬盘把一页的数据加载出来，加载出来的数据叫数据页，会放入到 Buffer Pool中。后续的查询或者修改都是直接从buffer Pool中更新。然后会把相关操作记录到undoLog中

9、12306抢票系统的库存模块怎么设计？

10、数据库行维度是什么？

11、MVCC机制：
MVCC是多版本并发控制，主要提高数据库性能的机制。允许多个事务同时读取和写入数据。、
Mvcc机制是实际上是通过readView + undoLog日志实现的。 其中readView负责可见性规则，undoLog负责保存历史快照。
查询一条记录时候会先获得一个事务版本id，然后获取readView。通过对比版本id确定该数据是否可读。
readView：trx_ids（未提交的事务版本号集合）low_limit_id（集合中最大值+1）up_limit_id（集合中最小值）
数据隐式字段：单调递增的row_id 最后一次修改该数据事务的trx_id  roll_pointer 指向undoLog日志


==================
1、kafka消费堆积怎么办？重试失败怎么办？
2、cpu飙高，内存飙高怎么排查处理？
3、当线程池处理任务时出现了异常会发生什么。

